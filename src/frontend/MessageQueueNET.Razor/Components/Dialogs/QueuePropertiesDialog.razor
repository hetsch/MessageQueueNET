@using MessageQueueNET.Client
@using MessageQueueNET.Client.Models;
@inject DashboardService DashboardService
@inject IDialogService DialogService

@inherits BaseComponent

@if (_properties != null)
{
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-3" />Properties: @QueueName
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTabs Elevation="1" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
                <MudTabPanel Text="Suspend">
                    <MudCheckBox Label="Suspend Enqueue"
                                 @bind-Checked="_properties.SuspendEnqueue" />
                    <MudCheckBox Label="Suspend Dequeue"
                                 @bind-Checked="_properties.SuspendDequeue" />
                </MudTabPanel>
                <MudTabPanel Text="Confirmation">
                    <MudNumericField Label="Period [Seconds]"
                                     @bind-Value="_properties.ConfirmationPeriodSeconds" />
                    <MudNumericField Label="Max Unconfirmed Items"
                                     @bind-Value="_properties.MaxUnconfirmedItems" />
                    <MudSelect Label="Max Unconformed Items Stragety" 
                               @bind-Value="_properties.MaxUnconfirmedItemsStrategy">
                        <MudSelectItem Value="MaxUnconfirmedItemsStrategy.Absolute">Absolute</MudSelectItem>
                        <MudSelectItem Value="MaxUnconfirmedItemsStrategy.PerClient">Per Client</MudSelectItem>
                    </MudSelect>
                </MudTabPanel>
                <MudTabPanel Text="Lifetime">
                    <MudNumericField Label="Queue [Seconds]"
                                     @bind-Value="_properties.LifetimeSeconds" />
                    <MudNumericField Label="Item [Seconds]"
                                     @bind-Value="_properties.ItemLifetimeSeconds" />
                </MudTabPanel>
            </MudTabs>
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled" 
                       Color="Color.Secondary" 
                       OnClick="() => MudDialog?.Close()" 
                       Class="px-10">Close</MudButton>
            <MudButton Variant="Variant.Filled" 
                       Color="Color.Primary"
                       OnClick="Submit" 
                       Class="px-10">Submit</MudButton>
        </DialogActions>
    </MudDialog>
}

@code{
    [Parameter] public string QueueName { get; set; } = "";
    [CascadingParameter] public MudDialogInstance? MudDialog { get; set; }

    private QueueProperties? _properties = null;

    async protected override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _properties = await DashboardService.GetQueueProperties(QueueName);
    }

    async private Task Submit()
    {
        if (_properties != null)
        {
            await DashboardService.SetQueueProperties(QueueName, _properties);
        }

        MudDialog?.Close();
    }
}