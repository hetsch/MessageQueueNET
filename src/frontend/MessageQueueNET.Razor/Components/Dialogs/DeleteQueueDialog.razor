@inject DashboardService DashboardService
@inject IDialogService DialogService

@inherits BaseComponent

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Delete" Class="mr-3" />Delete: @QueueName
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudSelect Label="Delete" T="Client.RemoveType" @bind-Value="_removeType">
            <MudSelectItem Value="Client.RemoveType.Queue">Queue</MudSelectItem>
            <MudSelectItem Value="Client.RemoveType.Messages">All Queued Messages</MudSelectItem>
            <MudSelectItem Value="Client.RemoveType.UnconfirmedMessages">Unconfirmed Messages</MudSelectItem>
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   OnClick="() => MudDialog?.Close()"
                   Class="px-10">Close</MudButton>
        <MudButton Variant="Variant.Filled"
                   Color="Color.Secondary"
                   OnClick="Submit"
                   Class="px-10">
            <MudIcon Icon="@Icons.Material.Filled.Delete" Class="mr-3" />
            Delete
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter] public string QueueName { get; set; } = "";
    [CascadingParameter] public MudDialogInstance? MudDialog { get; set; }

    private Client.RemoveType _removeType = Client.RemoveType.Queue;

    async private Task Submit()
    {
        if (await DashboardService.DeleteQueue(QueueName, _removeType))
        {
            MudDialog?.Close();
        }
    }
}  