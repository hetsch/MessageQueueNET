@using MessageQueueNET.Client.Models;
@inject DashboardService DashboardService
@inject IDialogService DialogService

@inherits BaseComponent

<MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-3" />Suspend: @QueueFilter
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudCheckBox Label="Suspend Enqueue"
                         @bind-Value="_suspendEnqueue" />
            <MudCheckBox Label="Suspend Dequeue"
                         @bind-Value="_suspendDequeue" />
                
        </DialogContent>
        <DialogActions>
            <MudButton Variant="Variant.Filled"
                       Color="Color.Secondary"
                       OnClick="() => MudDialog?.Close()"
                       Class="px-10">Close</MudButton>
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       OnClick="Submit"
                       Class="px-10">Submit</MudButton>
        </DialogActions>
</MudDialog>


@code {
    [Parameter] public string QueueFilter { get; set; } = "*";
    [CascadingParameter] public MudDialogInstance? MudDialog { get; set; }

    private bool _suspendDequeue;
    private bool _suspendEnqueue;

    async protected override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    async private Task Submit()
    {
        await DashboardService.SetQueuesSuspend(QueueFilter, _suspendEnqueue, _suspendDequeue);

        MudDialog?.Close();
    }
}